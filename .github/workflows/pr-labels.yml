name: PR Review Labels

on:
  pull_request_target:
    types:
      - opened  # PR 创建时触发
      - reopened
      - synchronize
      - ready_for_review
      - converted_to_draft
      - review_requested
      - review_request_removed
      - edited
  workflow_run:
    workflows: ["PR Review"]
    types:
      - completed

jobs:
  update-labels:
    if: |
      github.event_name == 'pull_request_target' ||
      github.event_name == 'workflow_run'
    runs-on: ubuntu-latest
    steps:
      - name: Update PR labels based on reviews
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const { owner, repo } = context.repo;

              // 获取 PR number
              let pr_number;
              if (context.payload.pull_request) {
                pr_number = context.payload.pull_request.number;
              } else if (context.payload.workflow_run) {
                const runId = context.payload.workflow_run.id;
                const { data: run } = await github.rest.actions.getWorkflowRun({
                  owner,
                  repo,
                  run_id: runId
                });
                pr_number = run.pull_requests[0].number;
              }

              // 获取 PR 的所有 reviews
              const reviews = await github.rest.pulls.listReviews({
                owner,
                repo,
                pull_number: pr_number
              });

              // 计算最新的 approved 数量
              const latestReviews = new Map();
              reviews.data.forEach(review => {
                latestReviews.set(review.user.id, review);
              });

              const approvedCount = Array.from(latestReviews.values()).filter(
                review => review.state === 'APPROVED'
              ).length;

              console.log('Approved count:', approvedCount);

              // 获取当前标签
              const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
                owner,
                repo,
                issue_number: pr_number
              });

              // 移除已有的 action 标签
              const labelsToRemove = currentLabels
                .filter(label => label.name === 'action:merge' || label.name === 'action:review')
                .map(label => label.name);

              for (const label of labelsToRemove) {
                await github.rest.issues.removeLabel({
                  owner,
                  repo,
                  issue_number: pr_number,
                  name: label
                });
              }

              // 添加新标签
              const newLabel = approvedCount >= 2 ? 'action:merge' : 'action:review';
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: pr_number,
                labels: [newLabel]
              });
            } catch (error) {
              console.error('Error:', error);
              throw error;
            }
