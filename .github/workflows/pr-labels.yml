name: PR Review Labels

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
  repository_dispatch:
    types: [pr_review_updated]

permissions:
  pull-requests: write
  issues: write

jobs:
  update-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Update PR labels
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const { owner, repo } = context.repo;
              
              // 获取 PR number
              const pr_number = context.payload.pull_request?.number || 
                              context.payload.client_payload?.pr_number;
              
              if (!pr_number) {
                throw new Error('Cannot determine PR number');
              }

              // 获取 PR 的所有 reviews
              const { data: reviews } = await github.rest.pulls.listReviews({
                owner,
                repo,
                pull_number: pr_number
              });

              // 获取每个用户的最新 review 状态
              const latestReviews = new Map();
              reviews.forEach(review => {
                latestReviews.set(review.user.id, review);
              });

              const approvedCount = Array.from(latestReviews.values())
                .filter(review => review.state === 'APPROVED')
                .length;

              console.log('Approved count:', approvedCount);

              // 获取当前标签并更新
              const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
                owner,
                repo,
                issue_number: pr_number
              });

              // 保留非 action 标签
              const labelsToKeep = currentLabels
                .filter(label => label.name !== 'action:merge' && label.name !== 'action:review')
                .map(label => label.name);

              // 添加新标签
              const newLabel = approvedCount >= 2 ? 'action:merge' : 'action:review';
              await github.rest.issues.setLabels({
                owner,
                repo,
                issue_number: pr_number,
                labels: [...labelsToKeep, newLabel]
              });

            } catch (error) {
              console.error('Error:', error);
              throw error;
            }
